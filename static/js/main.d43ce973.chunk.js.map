{"version":3,"sources":["components/searchbox/searchbox.jsx","components/card/card.jsx","components/card-list/card-list.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","placeholder","handleChange","className","type","onChange","Card","monster","alt","src","id","name","email","CardList","monsters","map","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAceA,MAZf,YAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAChC,OACE,uBACEC,UAAU,SACVC,KAAK,SACLH,YAAaA,EACbI,SAAUH,K,YCODI,MAbf,YAA4B,IAAZC,EAAW,EAAXA,QACd,OACE,sBAAKJ,UAAU,iBAAf,UACE,qBACEK,IAAI,UACJC,IAAG,+BAA0BF,EAAQG,GAAlC,4BAEL,mCAAuBH,EAAQI,KAA/B,MAASJ,EAAQG,IACjB,4BAAIH,EAAQK,YCGHC,MAVf,YAAiC,IAAbC,EAAY,EAAZA,SAClB,OACE,qBAAKX,UAAU,YAAf,SACGW,EAASC,KAAI,SAACR,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,UC6DZM,E,kDA5Db,aAAe,IAAD,8BACZ,gBAcFd,aAAe,SAACe,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXR,SAAU,GACVK,YAAa,IALH,E,gEASO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEJ,SAAUa,S,+BAOrC,IAAD,EAC2BC,KAAKN,MAA/BR,EADD,EACCA,SAAUK,EADX,EACWA,YACZU,EAAmBf,EAASgB,QAAO,SAAAvB,GAAO,OAC9CA,EAAQI,KAAKoB,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK5B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWF,YAAY,sBAAsBC,aAAc0B,KAAK1B,eAChE,cAAC,EAAD,CAAUY,SAAUe,W,GA7BVI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d43ce973.chunk.js","sourcesContent":["import \"./searchbox.css\";\r\n\r\nfunction SearchBox({ placeholder, handleChange }) {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  )\r\n\r\n}\r\n\r\nexport default SearchBox ","import \"../card/card.css\";\r\n\r\nfunction Card({ monster }) {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${monster.id}?set=set2&size=180x250`}\r\n      />\r\n      <h2 key={monster.id}> {monster.name} </h2>\r\n      <p>{monster.email}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import \"./card-list.css\";\r\nimport Card from \"../card/card.jsx\";\r\n\r\nfunction CardList({ monsters }) {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import { Component } from \"react\";\n// import { useEffect, useState } from 'react';\nimport \"./App.css\";\n\nimport SearchBox from \"./components/searchbox/searchbox\";\nimport CardList from \"./components/card-list/card-list\"; // functional component import\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n      <div className=\"App\">\n        <h1 >Monsters Rolodex</h1>\n        <SearchBox placeholder=\"Search For Monsters\" handleChange={this.handleChange} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\n// function App() {\n//   const [users, setUsers] = useState([]);\n//   const [searchField, setSearchField] = useState(\"\");\n\n//   useEffect(() => {\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\n//       .then(res => res.json())\n//       .then(users => setUsers(users))\n//   }, []);\n\n//   useEffect(() => {\n//     console.log(searchField)\n//   }, [searchField]);\n\n//   return (\n//     <div className=\"App\">\n//       <input\n//         type=\"search\"\n//         placeholder=\"Search for Monsters\"\n//         onChange={(e) => setSearchField(e.target.value)}\n//       />\n//       <CardList monsters={users} />\n//     </div>\n//   )\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}